version: '3.9'

services:
  mysql:
    image: mysql:8.0
    container_name: album-video-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-password}
      MYSQL_DATABASE: ${MYSQL_DATABASE:-album_video}
      MYSQL_USER: ${MYSQL_USER:-app_user}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-app_password}
      # パフォーマンス設定
      MYSQL_INIT_CONNECT: 'SET NAMES utf8mb4 COLLATE utf8mb4_unicode_ci'
      TZ: 'Asia/Tokyo'
    command: >
      --character-set-server=utf8mb4
      --collation-server=utf8mb4_unicode_ci
      --default-authentication-plugin=mysql_native_password
      --max_connections=200
      --innodb_buffer_pool_size=256M
    ports:
      - "${MYSQL_PORT:-3307}:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./docker/mysql/init:/docker-entrypoint-initdb.d:ro
    networks:
      - album-video-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${MYSQL_ROOT_PASSWORD:-password}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  web:
    build:
      context: ./web
      dockerfile: ../docker/web/Dockerfile
      target: development
      args:
        NODE_ENV: development
    container_name: album-video-web
    restart: unless-stopped
    environment:
      - NODE_ENV=development
      - DATABASE_URL=mysql://${MYSQL_USER:-app_user}:${MYSQL_PASSWORD:-app_password}@mysql:3306/${MYSQL_DATABASE:-album_video}
      - NEXTAUTH_SECRET=${JWT_SECRET:-change_me_in_production}
      - NEXTAUTH_URL=${NEXTAUTH_URL:-http://localhost:3000}
      - STORAGE_DRIVER=${STORAGE_DRIVER:-local}
      - LOCAL_STORAGE_DIR=/app/uploads
      - S3_ENDPOINT=${S3_ENDPOINT}
      - S3_REGION=${S3_REGION:-ap-northeast-1}
      - S3_ACCESS_KEY=${S3_ACCESS_KEY}
      - S3_SECRET_KEY=${S3_SECRET_KEY}
      - S3_BUCKET=${S3_BUCKET}
      - NEXT_TELEMETRY_DISABLED=1
      - TZ=Asia/Tokyo
    ports:
      - "${WEB_PORT:-3000}:3000"
    volumes:
      - ./web:/app
      - /app/node_modules
      - /app/.next
      - web_uploads:/app/uploads
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - album-video-network
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3000/', (r) => {process.exit(r.statusCode === 200 ? 0 : 1)})"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 60s

volumes:
  mysql_data:
    driver: local
  web_uploads:
    driver: local

networks:
  album-video-network:
    driver: bridge