openapi: 3.0.3
info:
  title: Album Video API
  version: 0.1.0
servers:
  - url: http://localhost:3001
security:
  - bearerAuth: []
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
paths:
  /health:
    get:
      summary: Health check
      responses:
        '200':
          description: ok
  /albums:
    get:
      security: [{ bearerAuth: [] }]
      summary: List albums
      responses: { '200': { description: ok } }
    post:
      security: [{ bearerAuth: [] }]
      summary: Create album
      responses: { '201': { description: created } }
  /albums/{id}:
    get:
      security: [{ bearerAuth: [] }]
      parameters: [{ name: id, in: path, required: true, schema: { type: string } }]
      responses: { '200': { description: ok } }
    patch:
      security: [{ bearerAuth: [] }]
      parameters: [{ name: id, in: path, required: true, schema: { type: string } }]
      responses: { '200': { description: ok } }
    delete:
      security: [{ bearerAuth: [] }]
      parameters: [{ name: id, in: path, required: true, schema: { type: string } }]
      responses: { '204': { description: no content } }
  /media/upload:
    post:
      security: [{ bearerAuth: [] }]
      summary: Upload media (multipart/form-data)
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                albumId: { type: string }
                caption: { type: string }
                tags: { type: string, description: "comma separated" }
                file: { type: string, format: binary }
              required: [albumId, file]
      responses: { '201': { description: created } }
  /media/{id}:
    get:
      security: [{ bearerAuth: [] }]
      parameters: [{ name: id, in: path, required: true, schema: { type: string } }]
      responses: { '200': { description: ok } }
    delete:
      security: [{ bearerAuth: [] }]
      parameters: [{ name: id, in: path, required: true, schema: { type: string } }]
      responses: { '204': { description: no content } }
  /slideshow:
    post:
      security: [{ bearerAuth: [] }]
      summary: Create slideshow job
      responses: { '201': { description: created } }
  /slideshow/{jobId}:
    get:
      security: [{ bearerAuth: [] }]
      parameters: [{ name: jobId, in: path, required: true, schema: { type: string } }]
      responses: { '200': { description: ok } }