version: '3.9'

services:
  mysql:
    image: mysql:8.0
    container_name: album-video-mysql-prod
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_INIT_CONNECT: 'SET NAMES utf8mb4 COLLATE utf8mb4_unicode_ci'
      TZ: 'Asia/Tokyo'
    command: >
      --character-set-server=utf8mb4
      --collation-server=utf8mb4_unicode_ci
      --default-authentication-plugin=mysql_native_password
      --max_connections=200
      --innodb_buffer_pool_size=512M
      --innodb_log_file_size=128M
      --innodb_flush_log_at_trx_commit=2
      --slow_query_log=1
      --slow_query_log_file=/var/log/mysql/slow.log
      --long_query_time=2
    volumes:
      - mysql_data:/var/lib/mysql
      - mysql_logs:/var/log/mysql
      - ./docker/mysql/init:/docker-entrypoint-initdb.d:ro
    networks:
      - album-video-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${MYSQL_ROOT_PASSWORD}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  web:
    build:
      context: ./web
      dockerfile: ../docker/web/Dockerfile
      target: production
      args:
        NODE_ENV: production
    container_name: album-video-web-prod
    restart: always
    environment:
      - NODE_ENV=production
      - DATABASE_URL=mysql://${MYSQL_USER}:${MYSQL_PASSWORD}@mysql:3306/${MYSQL_DATABASE}
      - NEXTAUTH_URL=${NEXTAUTH_URL}
      - NEXTAUTH_SECRET=${NEXTAUTH_SECRET}
      - LINE_CLIENT_ID=${LINE_CLIENT_ID}
      - LINE_CLIENT_SECRET=${LINE_CLIENT_SECRET}
      - STORAGE_DRIVER=${STORAGE_DRIVER:-s3}
      - S3_ENDPOINT=${S3_ENDPOINT}
      - S3_BUCKET=${S3_BUCKET}
      - S3_ACCESS_KEY=${S3_ACCESS_KEY}
      - S3_SECRET_KEY=${S3_SECRET_KEY}
      - S3_REGION=${S3_REGION:-ap-northeast-1}
      - NEXT_TELEMETRY_DISABLED=1
      - TZ=Asia/Tokyo
    ports:
      - "127.0.0.1:3000:3000"
    volumes:
      - web_uploads:/app/uploads
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - album-video-network
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3000/', (r) => {process.exit(r.statusCode === 200 ? 0 : 1)})"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 60s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Nginx reverse proxy (本番環境用)
  nginx:
    image: nginx:alpine
    container_name: album-video-nginx
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./docker/nginx/conf.d:/etc/nginx/conf.d:ro
      - nginx_logs:/var/log/nginx
      - ssl_certs:/etc/nginx/ssl:ro
    depends_on:
      - web
    networks:
      - album-video-network
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      interval: 30s
      timeout: 3s
      retries: 3

volumes:
  mysql_data:
    driver: local
  mysql_logs:
    driver: local
  web_uploads:
    driver: local
  nginx_logs:
    driver: local
  ssl_certs:
    driver: local

networks:
  album-video-network:
    driver: bridge

